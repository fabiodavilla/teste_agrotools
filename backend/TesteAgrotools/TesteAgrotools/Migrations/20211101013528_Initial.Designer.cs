// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAgrotools.Infrastructure.Model;

namespace TesteAgrotools.Migrations
{
    [DbContext(typeof(ProjectModel))]
    [Migration("20211101013528_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("TesteAgrotools.Entities.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormFieldFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserAnswer")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("latitude")
                        .HasColumnType("TEXT");

                    b.Property<string>("longitude")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("FormFieldFK");

                    b.HasIndex("UserFK");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("TesteAgrotools.Entities.Form", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("User")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Form");
                });

            modelBuilder.Entity("TesteAgrotools.Entities.FormField", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormFK")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("FormFK");

                    b.ToTable("FormField");
                });

            modelBuilder.Entity("TesteAgrotools.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("TesteAgrotools.Entities.Answer", b =>
                {
                    b.HasOne("TesteAgrotools.Entities.FormField", "FormField")
                        .WithMany()
                        .HasForeignKey("FormFieldFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteAgrotools.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormField");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TesteAgrotools.Entities.FormField", b =>
                {
                    b.HasOne("TesteAgrotools.Entities.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });
#pragma warning restore 612, 618
        }
    }
}
